# list of fields
# session_num	subject	trial_num	block	condition	correct	error	error_type	behavioral_code_markers	behavioral_code_times	stimuli_name_1	x_1_pos	y_1_pos	stimuli_name_2	x_2_pos	y_2_pos	reward_1	reward_prob_1	reward_mag_1	reward_drops_1	reward_length_1	reward_2	reward_prob_2	reward_mag_2	airpuff_1	airpuff_prob_1	airpuff_mag_1	airpuff_2	airpuff_prob_2	airpuff_mag_2	eye_x	eye_y	eye_pupil	lick	photodiode	trial_start	trial_datetime_start	trial_datetime_end	reinforcement_trial	choice_trial	stim_chosen	stim_2_chosen	fractal_chosen	reward	reward_mag	airpuff	airpuff_mag	cam1_trial_name	cam1_trial_time	cam1_video	Start Trial	Fixation On	Fixation Success	CS On	Fixation Off	Trace Start	Trace End	Outcome Start	Reward Trigger	Airpuff Trigger	Outcome	Outcome End	Manual Reward	End Trial	valence	valence_1	valence_2	valence_not_chosen lick_raster	DEM_raster	trial_bins	trial_in_block	fractal_count_in_block	lick_count_window	blink_count_window	pupil_data_window	pupil_raster	pupil_raster_window	pupil_raster_window_avg	pupil_binary_zero	blink_onset	blink_offset	blink_raster	blink_raster_window	blink_duration_window	pupil_pre_CS	lick_in_window	blink_in_window	lick_duration	blink_duration_sig	blink_duration_offscreen	eye_distance
field_dict = {
  'date': '[YYMMDD] the date of the experiment',
  'session_num': '[0...n] the session number for each day',
  'trial_num': '[0...n] the trial number in a given session',
  'block': '[1,2] the block number (pre-reversal = 1, post-reversal = 2)',
  'condition': '[1,2] same as block (pre-reversal = 1, post-reversal = 2)',
  'correct': '[0,1] whether the animal successfully finished the trial',
  'error': '[0,1] whether the animal made an error',
  'error_type': '[0,1,2,3,4] 0 = no error, 1-4 (see codes.txt for more details)',
  'behavioral_code_markers': '[0...n] the behavioral code markers for each trial (see codes.txt for more details)',
  'behavioral_code_times': '[0...n] the behavioral code times for each behavioral_code_marker',
  'stimuli_name_1': '[string] the name of the stimuli presented (reinforcement) or the stimuli presented on the left (choice trial)',
  'x_1_pos': '[0...n] the x position of stimuli_name_1',
  'y_1_pos': '[0...n] the y position of stimuli_name_1',
  'stimuli_name_2': '[string] the name of the stimuli presented (reinforcement) or the stimuli presented on the right (choice trial)',
  'x_2_pos': '[0...n] the x position of stimuli_name_2',
  'y_2_pos': '[0...n] the y position of stimuli_name_2',
  'reward_1': '[0,1] binary reward assignment for stimuli_name_1',
  'reward_prob_1': '[0...1] the probability of reward for stimuli_name_1',
  'reward_mag_1': '[0...n] the magnitude of reward for stimuli_name_1',
  'reward_drops_1': '[0...n] the number of reward drops for stimuli_name_1',
  'reward_length_1': '[0...n] the length of reward for stimuli_name_1 in ms',
  'reward_2': '[0,1] binary reward assignment for stimuli_name_2',
  'reward_prob_2': '[0...1] the probability of reward for stimuli_name_2',
  'reward_mag_2': '[0...n] the magnitude of reward for stimuli_name_2',
  'airpuff_1': '[0,1] binary airpuff assignment for stimuli_name_1',
  'airpuff_prob_1': '[0...1] the probability of airpuff for stimuli_name_1',
  'airpuff_mag_1': '[0...n] the magnitude of airpuff for stimuli_name_1',
  'airpuff_2': '[0,1] binary airpuff assignment for stimuli_name_2',
  'airpuff_prob_2': '[0...1] the probability of airpuff for stimuli_name_2',
  'airpuff_mag_2': '[0...n] the magnitude of airpuff for stimuli_name_2',
  'eye_x': '[0...n] the x position of the eye',
  'eye_y': '[0...n] the y position of the eye',
  'eye_pupil': '[0...n] the pupil size of the eye',
  'lick': '[0...5] the voltage of the lick sensor',
  'photodiode': '[0...n] the voltage of the photodiode',
  'trial_start': '[0...n] the relative start time of the trial (ms from start of session)',
  'trial_datetime_start': '[string] the absolute start time of the trial (YYYY-MM-DD HH:MM:SS)',
  'trial_datetime_end': '[string] the absolute end time of the trial (YYYY-MM-DD HH:MM:SS)',
  'reinforcement_trial': '[0,1] whether the trial was a reinforcement trial',
  'choice_trial': '[0,1] whether the trial was a choice trial',
  'stim_chosen': '[0...n] the index of stimuli_name_1',
  'stim_2_chosen': '[string] the index of stimuli_name_2',
  'fractal_chosen': '[string] the name of the fractal chosen',
  'reward': '[0,1] whether the animal received a reward',
  'reward_mag': '[0...n] the magnitude of the reward received',
  'airpuff': '[0,1] whether the animal received an airpuff',
  'airpuff_mag': '[0...n] the magnitude of the airpuff received',
  'cam1_trial_name': '[string] the name of the video file for cam1',
  'cam1_trial_time': '[0...n] the frame times for cam1',
  'cam1_video': 'the video for the trial from cam1',
  'Start Trial': '[n] the beginning of the trial',
  'Fixation On': '[n] central fixation presented time',
  'Fixation Success': '[n] central fixation success time',
  'CS On': '[n] central fixation and fractal presentation start time',
  'Fixation Off': '[n] central fixation off and fractal on time',
  'Trace Start': '[n] fractal hold success and trace start time',
  'Trace End': '[n] the trace end time',
  'Outcome Start': '[n] the outcome start time',
  'Reward Trigger': '[n] the reward trigger time (if reward = 1)',
  'Airpuff Trigger': '[n] the airpuff trigger time (if airpuff = 1)',
  'Outcome': '[n] the outcome time (if reward = 1)',
  'Outcome End': '[n] the outcome end time',
  'Manual Reward': '[n] the manual reward time',
  'End Trial': '[n] the end of the trial time',
  'valence': '[-1...1] the valence of the fractal received (>0 = positive, <0 = negative)',
  'valence_1': '[-1...1] the valence of stimuli_name_1',
  'valence_2': '[-1...1] the valence of stimuli_name_2',
  'valence_not_chosen': '[-1...1] the valence of the stimuli not chosen',
  'lick_raster': '[n] the lick raster binarizing the lick data (>4mV = lick)',
  'DEM_raster': '[n] the defensive eye movement raster binarizing the eye data (x > abs(10) or y > abs(10))',
  'trial_bins': '[n] the trial bins for the lick raster and DEM raster',
  'trial_in_block': '[n] the successful trial number in a given block',
  'fractal_count_in_block': '[n] the number of trials in which fractal_chosen was experienced in a given block',
  'lick_count_window': '[n] the number of licks in a given window',
  'blink_count_window': '[n] the number of blinks in a given window',
  'pupil_data_window': '[n] the pupil values in a given window',
  'pupil_raster': '[n] the pupil raster binarizing the pupil data (1 if pupil = 0)',
  'pupil_raster_window': '[n] the pupil raster binarizing the pupil data in a given window (1 if pupil = 0)',
  'pupil_raster_window_avg': '[n] the average pupil raster binarizing the pupil data in a given window',
  'pupil_binary_zero': '[n] the pupil raster binarizing the pupil data (1 if pupil = 0)',
  'blink_onset': '[n] the blink onset times',
  'blink_offset': '[n] the blink offset times',
  'blink_raster': '[n] the blink raster binarizing the blink data (1 if blink = 1)',
  
}